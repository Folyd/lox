// (-1 + 2) * 3 - -4;
// print !(5 - 4 > 3 * 2 == !nil);
print "hello" + "hellox";
var a = 1;
print a;

var breakfast = "beignets";
var beverage = "cafe au lait";
breakfast = "beignets with " + beverage;
// a + 1 = breakfast;
print breakfast;

if (a and 1 >= 2) {
    var b = a + 1;
    var t = 0;
    {
        var b = "inner block";
        print b;
    }
    t = 11;
    print b;
    b = 3;
    print b;
    print b;
} else if (a != 100) {
    print "else if";
} else {
    print "else";
}

print "while loop";
while (a < 10) {
    print a;
    a = a + 1;
    if (a == 5) {
        print "a == 5";
    }
}

print "for loop";
for (var i = 010; i > 0; i = i - 1) {
    print i;
}

print "end";


fun simple(a) {
   print "simple";
}

print simple;

fun simple(a) {
   print "simple" + a;
   f2();
}

fun f1() {
    print "f1";
}

fun f2() {
    print "f2";
    f1();
}

print simple;

simple("test");

print clock();

fun fib(n) {
  if (n < 2) return n;
  return fib(n - 2) + fib(n - 1);
}

var start = clock();
print fib(3);
print clock() - start;

fun outer() {
  var a = 1;
  var b = 2;
  fun middle() {
    var c = 3;
    var d = 4;
    fun inner() {
      d = d + 1;
      print a + c + b + d;
    }
    inner();
    print d;
  }
  middle();
}
outer();

class Pair {
    test() {
        print "test";
    }
}

var pair = Pair();
pair.first = 1;
pair.second = 2;
print pair.first + pair.second; // 3.

class Scone {
  topping(first, second) {
    print "scone with " + first + " and " + second;
  }
}

var scone = Scone();
scone.topping("berries", "cream");
var tt = scone.topping;
tt("berries2", "cream2");

class Nested {
  method() {
    fun function() {
      print this;
    }

    function();
  }
}

Nested().method();

class CoffeeMaker {
  init(coffee) {
    this.coffee = coffee;
  }

  brew() {
    print "Enjoy your cup of " + this.coffee;

    // No reusing the grounds!
    this.coffee = nil;
  }
}

var maker = CoffeeMaker("coffee and chicory");
maker.brew();

class Oops {
  init() {
    fun f() {
      print "not a method";
    }

    this.field = f;
  }
}

var oops = Oops();
oops.field();

class Doughnut {
  cook() {
    print "Dunk in the fryer.";
    this.finish("sprinkles");
  }

  finish(ingredient) {
    print "Finish with " + ingredient;
  }
}

class Cruller < Doughnut {
  finish(ingredient) {
    // No sprinkles, always icing.
    super.finish("icing");
  }
}

var cruller = Cruller();
cruller.finish("cruller");